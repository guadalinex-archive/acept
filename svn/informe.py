#!/usr/bin/env python
# -*- coding: ISO-8859-1 -*-
#
# Fichero:	informe.py
# Copyright:	Junta de Andalucía <devmaster@guadalinex.org>
# Autor:	Maria Dolores Pérez Gutiérrez y Néstor Chacón Manzano
# Fecha:	lun mar 27 17:01:27 CET 2006
# Licencia:	GPL v.2
#
# generated by wxGlade 0.3.5.1 on Thu Mar 16 16:27:25 2006
#
# Muestra una ventana html  generada dinamicamente a partir de un modelo con los consumos web

from time import time
from sys import argv, exit
from os import system
from watcherMods import *
import wx, wx.html


class MyFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MyFrame.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.text_ctrl_1 = wx.html.HtmlWindow(self, -1,size=(600,500),style=wx.html.HW_SCROLLBAR_NEVER)
        self.button_1 = wx.Button(self, -1, "Aceptar")
        self.button_2 = wx.Button(self, -1, "+")
	
	
	list_us=usuarios()
	tmp_us=[]
	for i in list_us:
	    b=i.get(argv[1]+'+web')
	    if b:
		tmp_us=b
		break
	nivel=0
	if not tmp_us or tmp_us[0]=='1':
	    horas_dia="00:00"
	    horas_semana="00:00"
	    horas_mes="00:00"
	    perm_dia="infinitas"
	    perm_semana="infinitas"
	    perm_mes="infinitas"
	    nivel=nivel+1
	else:
	    horas_dia=tmp_us[3]
	    horas_semana=tmp_us[4]
	    horas_mes=tmp_us[5]
	    perm_dia=tmp_us[0]
	    perm_semana=tmp_us[1]
	    perm_mes=tmp_us[2]
	
	horas=self.horario_permitido(argv[1])
	if horas=="0000-2359":
	    nivel=nivel+1
	if nivel==2 :
	    exit()
	if horas=="":
	    print "Error no acceso hoy disponible"
	    exit()
	inicio=horas[0:2]+":"+horas[2:4]
	fin=horas[5:7]+":"+horas[7:9]
	tmp_file=time()
	tmp_file="/tmp/"+str(tmp_file)+".html"
	system('cp /usr/share/acept/modelo.html '+tmp_file)
	system("sed -i 's/USUARIO/"+argv[1]+"/' "+tmp_file)
	system("sed -i 's/INICIO/"+inicio+"/' "+tmp_file)
	system("sed -i 's/FIN/"+fin+"/' "+tmp_file)
	system("sed -i 's/HORAS_DIA/"+horas_dia+"/' "+tmp_file)
	system("sed -i 's/HORAS_SEMANA/"+horas_semana+"/' "+tmp_file)
	system("sed -i 's/HORAS_MES/"+horas_mes+"/' "+tmp_file)
	system("sed -i 's/PERM_DIA/"+perm_dia+"/' "+tmp_file)
	system("sed -i 's/PERM_SEMANA/"+perm_semana+"/' "+tmp_file)
	system("sed -i 's/PERM_MES/"+perm_mes+"/' "+tmp_file)
	self.bienvenida=tmp_file
        
	
	self.__set_properties()
        self.__do_layout()
	self.SetSize((650,600))
	self.Centre(wx.BOTH)
	wx.EVT_BUTTON(self,self.button_1.GetId(),self.aceptar)
	wx.EVT_BUTTON(self,self.button_2.GetId(),self.mas)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: MyFrame.__set_properties
        self.text_ctrl_1.SetTitle("Alerta ACEPT")
        _icon = wx.EmptyIcon()
        _icon.CopyFromBitmap(wx.Bitmap("/usr/share/acept/pixmaps/fondo_junta.gif", wx.BITMAP_TYPE_ANY))
        self.SetIcon(_icon)
	
	self.text_ctrl_1.LoadPage(self.bienvenida)
	system('rm '+self.bienvenida)
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: MyFrame.__do_layout
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        sizer_2 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_3 = wx.BoxSizer(wx.VERTICAL)
        sizer_5 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_2.Add((20, 20), 0, 0, 0)
        sizer_3.Add((20, 20), 0, 0, 0)
        sizer_3.Add(self.text_ctrl_1, 1, wx.EXPAND, 0)
        sizer_3.Add((20, 20), 0, 0, 0)
        sizer_5.Add(self.button_1, 1, 0, 0)
        sizer_5.Add((20, 20), 1, 0, 0)
        sizer_5.Add(self.button_2, 1, 0, 0)
        sizer_3.Add(sizer_5, 0, wx.EXPAND, 0)
        sizer_3.Add((20, 20), 0, 0, 0)
        sizer_2.Add(sizer_3, 1, wx.EXPAND, 0)
        sizer_2.Add((20, 20), 0, 0, 0)
        sizer_1.Add(sizer_2, 1, wx.EXPAND, 0)
        self.SetAutoLayout(True)
        self.SetSizer(sizer_1)
        sizer_1.Fit(self)
        sizer_1.SetSizeHints(self)
        self.Layout()
        # end wxGlade
    def aceptar (self, event):
	self.Close()
	
    def mas (self, event):
	from os import system
	system("/usr/share/acept/mas_info.py "+argv[1])
	#self.hide()
    
    def ind_horario(self, horario):
	import time
		 
        #se consulta horario de dia actual
	dweek=time.strftime("%a",time.localtime())
	dsem=dweek[0:2].capitalize()
	
	if dsem.find('Lu')!=-1 or dsem.find('Mo')!=-1:
	    ind=horario.find('Mo')
	elif dsem.find('Ma')!=-1 or dsem.find('Tu')!=-1:
	    ind=horario.find('Tu')
	elif dsem.find('Mi')!=-1 or dsem.find('We')!=-1:
	    ind=horario.find('We')
	elif dsem.find('Ju')!=-1 or dsem.find('Th')!=-1:
	    ind=horario.find('Th')
	elif dsem.find('Vi')!=-1 or dsem.find('Fr')!=-1:
	    ind=horario.find('Fr')
	elif dsem.find('Sa')!=-1 or dsem.find('Sa')!=-1:
	    ind=horario.find('Sa')
	elif dsem.find('Do')!=-1 or dsem.find('Su')!=-1:
	    ind=horario.find('Su')
	else:
	    ind=-1

        return ind    


    def horario_permitido(self, usr):
	from func import parse_file

	xmldoc=parse_file(archivo.configuracion)
	
	padre=xmldoc.getElementsByTagName('usuarios')[0]
	encontrado=False
	for consulta in padre.childNodes:
	    if consulta.nodeName.find(usr)!=-1 and usr.find(consulta.nodeName)!=-1:
		encontrado=True
		break
	
	if encontrado:
	    horario=consulta.getAttribute("acceso")
	    posic=self.ind_horario(horario)
	    if posic==-1:
		horario=""
	    else:
	    	horario=str(horario[posic+2:posic+11])
	else :
	    horario="0000-2359"
	return horario

# end of class MyFrame
class Inicio_App(wx.App):
    """ Inicializa el entorno Gráfico """
    def OnInit(self):
	wx.InitAllImageHandlers()
        self.myframe=MyFrame(None,-1,"")
        self.myframe.Show()
	return True

inicio=Inicio_App()
inicio.MainLoop()




